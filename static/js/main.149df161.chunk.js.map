{"version":3,"sources":["components/CookingOptions/CookingOptions.jsx","components/BotAvatar/BotAvatar.jsx","components/ListLink/LinkList.jsx","mainComponents/config.js","components/options/widgetsOptions.js","mainComponents/ActionProvider.js","components/options/MessageParserOptions.js","mainComponents/MessageParser.js","App.js","index.js"],"names":["CookingOptions","props","optionsMarkup","text","handler","actionProvider","handleBreakfast","id","handleDinner","handleVegan","handleHealthy","handleQuickEasy","handleDesserts","map","option","className","key","onClick","BotAvatar","LinkList","linkMarkup","options","link","href","url","target","rel","config","botName","initialMessages","createChatBotMessage","widget","customComponents","botAvatar","widgets","widgetName","widgetFunc","ActionProvider","setStateFunc","message","updateChatbotState","funnymessage","setTimeout","this","setState","greetingMessage","prevState","messages","greet","quickEasy","breakFast","dinner","vegan","healthy","desserts","MessageParser","state","lowerCaseMessage","toLowerCase","includes","App","messageParser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.149df161.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './CookingOptions.css'\r\n\r\nconst CookingOptions = (props) => {\r\n  const options = [\r\n    { text: \"Breakfast & Brunch\", handler: props.actionProvider.handleBreakfast,\r\n    id: 1 },\r\n    { text: \"Dinner\", handler: props.actionProvider.handleDinner, id: 1 },\r\n    { text: \"Vegan\", handler: props.actionProvider.handleVegan, id: 3 },\r\n    { text: \"Healthy\", handler: props.actionProvider.handleHealthy, id: 4 },\r\n    { text: \"Quick & Easy\", handler: props.actionProvider.handleQuickEasy, id: 5 },\r\n    { text: \"Desserts\", handler: props.actionProvider.handleDesserts, id: 6 },\r\n  ];\r\n\r\n  const optionsMarkup = options.map((option) => (\r\n    <button\r\n      className=\"learning-option-button\"\r\n      key={option.id}\r\n      onClick={option.handler}\r\n    >\r\n      {option.text}\r\n    </button>\r\n  ));\r\n\r\n  return <div className=\"learning-options-container\">{optionsMarkup}</div>;\r\n};\r\n\r\nexport default CookingOptions;","import React from 'react'\r\nimport './BotAvatar.css'\r\n\r\n\r\nconst BotAvatar = (props) => {\r\n    return (\r\n        <div className=\"avatar\">C</div>\r\n    )\r\n}\r\n\r\nexport default BotAvatar","import React from \"react\";\r\n\r\nimport \"./LinkList.css\";\r\n\r\nconst LinkList = (props) => {\r\n  const linkMarkup = props.options.map((link) => (\r\n    <li key={link.id} className=\"link-list-item\">\r\n      <a\r\n        href={link.url}\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n        className=\"link-list-item-url\"\r\n      >\r\n        {link.text}\r\n      </a>\r\n    </li>\r\n  ));\r\n\r\n  return <ul className=\"link-list\">{linkMarkup}</ul>;\r\n};\r\n\r\nexport default LinkList;\r\n","import React from 'react'\r\nimport { createChatBotMessage } from \"react-chatbot-kit\";\r\nimport CookingOptions from '../components/CookingOptions/CookingOptions'\r\nimport BotAvatar from './../components/BotAvatar/BotAvatar'\r\nimport LinkList from './../components/ListLink/LinkList'\r\nimport {breackFast, dinner, vegan, healthy, quickEasy, desserts} from '../components/options/widgetsOptions'\r\n\r\n\r\n\r\nconst config = { \r\n  botName: \"cookBot\",\r\n  initialMessages: [createChatBotMessage(\"Hey, what are we going to cook today?\",\r\n   {widget: \"CookingOptions\"}),\r\n],\r\n  customComponents: {\r\n    botAvatar: (props) => <BotAvatar {...props} />,  \r\n  },\r\n  widgets: [\r\n    {\r\n      widgetName: \"CookingOptions\",\r\n     widgetFunc: (props) => <CookingOptions {...props} />,\r\n    },\r\n    {\r\n      widgetName: \"Breakfast & Brunch\",\r\n      widgetFunc: (props) => <LinkList {...props} />,\r\n      props: {options: breackFast},\r\n    },\r\n    {\r\n      widgetName: \"Dinner\",\r\n      widgetFunc: (props) => <LinkList {...props} />,\r\n      props: {options:dinner},\r\n    },\r\n    {\r\n      widgetName: \"Vegan\",\r\n      widgetFunc: (props) => <LinkList {...props} />,\r\n      props: {options:vegan},\r\n    },\r\n    {\r\n      widgetName: \"Healthy\",\r\n      widgetFunc: (props) => <LinkList {...props} />,\r\n      props: {options:healthy},\r\n    },\r\n    {\r\n      widgetName: \"Quick & Easy\",\r\n      widgetFunc: (props) => <LinkList {...props} />,\r\n      props:{options:quickEasy},\r\n    },\r\n    {\r\n      widgetName: \"Desserts\",\r\n      widgetFunc: (props) => <LinkList {...props} />,\r\n      props:{options: desserts},\r\n    },\r\n],\r\n    }\r\n\r\n\r\nexport default config","\r\n\r\nexport const breackFast = [\r\n    {\r\n      text: \"French Toast Recipes\",\r\n      url:\r\n        \"https://www.allrecipes.com/recipes/149/breakfast-and-brunch/french-toast/\",\r\n      id: 1,\r\n    },\r\n    {\r\n      text: \"Crepes and Blintze Recipes\",\r\n      url:\r\n        \"https://www.allrecipes.com/recipes/147/breakfast-and-brunch/crepes/\",\r\n      id: 1,\r\n    },\r\n    {\r\n      text: \"Pancake Recipes\",\r\n      url:\r\n        \"https://www.allrecipes.com/recipes/151/breakfast-and-brunch/pancakes/\",\r\n      id: 1,\r\n    },\r\n  ]\r\n\r\n  \r\n\r\nexport const dinner= [\r\n  {\r\n    text: \"Chicken Recipes\",\r\n    url:\r\n      \"https://www.allrecipes.com/recipes/201/meat-and-poultry/chicken/\",\r\n    id: 1,\r\n  },\r\n  {\r\n    text: \"Pork Recipes\",\r\n    url:\r\n      \"https://www.allrecipes.com/recipes/205/meat-and-poultry/pork/\",\r\n    id: 1,\r\n  },\r\n  {\r\n    text: \"Beef Recipes\",\r\n    url:\r\n      \"https://www.allrecipes.com/recipes/200/meat-and-poultry/beef/\",\r\n    id: 1,\r\n  },\r\n  {\r\n    text: \"Pasta and Noodle Recipes\",\r\n    url:\r\n      \"https://www.allrecipes.com/recipes/95/pasta-and-noodles/\",\r\n    id: 1,\r\n  },\r\n]\r\n\r\nexport const healthy = [\r\n  {\r\n    text: \"Healthy Kid Recipes\",\r\n    url:\r\n      \"https://www.allrecipes.com/recipes/17204/everyday-cooking/family-friendly/kid-friendly/kids/\",\r\n    id: 1,\r\n  },\r\n  {\r\n    text: \"Diabetic Recipes\",\r\n    url:\r\n      \"https://www.allrecipes.com/recipes/739/healthy-recipes/diabetic/\",\r\n    id: 2,\r\n  },\r\n  {\r\n    text: \"Superfood Recipes\",\r\n    url:\r\n      \"https://www.allrecipes.com/recipes/2818/healthy-recipes/super-foods/\",\r\n    id: 3,\r\n  },\r\n  {\r\n    text: \"More...\",\r\n    url:\r\n      \"https://www.allrecipes.com/recipes/84/healthy-recipes/?internalSource=hubcard&referringContentType=Search&clickId=cardslot%201\",\r\n    id: 4,\r\n  },\r\n]\r\n\r\n\r\n\r\nexport const vegan = [\r\n  {\r\n    text: \"Vegan Breakfast and Brunch Recipes\",\r\n    url:\r\n      \"https://www.allrecipes.com/recipes/17093/everyday-cooking/vegan/breakfast-and-brunch/\",\r\n    id: 1,\r\n  },\r\n  {\r\n    text: \"Vegan Bread Recipes\",\r\n    url:\r\n      \"https://www.allrecipes.com/recipes/17074/everyday-cooking/vegan/bread/\",\r\n    id: 2,\r\n  },\r\n  {\r\n    text: \"Vegan Soups and Stews Recipes\",\r\n    url:\r\n      \"https://www.allrecipes.com/recipes/16570/everyday-cooking/vegan/soups-and-stews/\",\r\n    id: 3,\r\n  },\r\n  {\r\n    text: \"More...\",\r\n    url:\r\n      \"https://www.allrecipes.com/recipes/1227/everyday-cooking/vegan/?internalSource=hubcard&referringContentType=Search&clickId=cardslot%201\",\r\n    id: 1,\r\n  },\r\n]\r\n\r\nexport const quickEasy = [\r\n  {\r\n    text: \"15-Minute Meal Recipes\",\r\n    url:\r\n      \"https://www.allrecipes.com/recipes/454/everyday-cooking/more-meal-ideas/15-minute-meals/\",\r\n    id: 1,\r\n  },\r\n  {\r\n    text: \"30-Minute Meal Recipes\",\r\n    url:\r\n      \"https://www.allrecipes.com/recipes/455/everyday-cooking/more-meal-ideas/30-minute-meals/\",\r\n    id: 2,\r\n  },\r\n  {\r\n    text: \"45-Minute Meal Recipes\",\r\n    url:\r\n      \"https://www.allrecipes.com/recipes/456/everyday-cooking/more-meal-ideas/45-minute-meals/\",\r\n    id: 3,\r\n  },\r\n]\r\n\r\nexport const desserts = [\r\n  {\r\n    text: \"Cake Recipes\",\r\n    url:\r\n      \"https://www.allrecipes.com/recipes/276/desserts/cakes/\",\r\n    id: 1,\r\n  },\r\n  {\r\n    text: \"Cookie Recipes\",\r\n    url:\r\n      \"https://www.allrecipes.com/recipes/362/desserts/cookies/\",\r\n    id: 2,\r\n  },\r\n  {\r\n    text: \"Fruit Dessert Recipes\",\r\n    url:\r\n      \"https://www.allrecipes.com/recipes/17140/desserts/fruit-desserts/\",\r\n    id: 3,\r\n  },\r\n  {\r\n    text: \"Frozen Dessert Recipes\",\r\n    url:\r\n      \"https://www.allrecipes.com/recipes/364/desserts/frozen-desserts/\",\r\n    id: 4,\r\n  },\r\n  {\r\n    text: \"Pasta and Noodle Recipes\",\r\n    url:\r\n      \"https://www.allrecipes.com/recipes/95/pasta-and-noodles/\",\r\n    id: 5,\r\n  },\r\n  {\r\n    text: \"Chocolate Dessert Recipes\",\r\n    url:\r\n      \"https://www.allrecipes.com/recipes/1557/desserts/chocolate/\",\r\n    id: 6,\r\n  },\r\n]","\r\n\r\nclass ActionProvider {\r\n  constructor(createChatBotMessage, setStateFunc) {\r\n    this.createChatBotMessage = createChatBotMessage;\r\n    this.setState = setStateFunc;\r\n  }\r\n\r\n\r\n\r\ngreet() {\r\n  const greetingMessage = this.createChatBotMessage(\"Hi, friend, what we will cook today?\")\r\n  this.updateChatbotState(greetingMessage)\r\n}\r\nhandleBreakfast = () => {\r\n  const message = this.createChatBotMessage(\r\n    \"Great, choose a category and move on:\",\r\n    {\r\n      widget: \"Breakfast & Brunch\",\r\n    }\r\n  );\r\n\r\n  this.updateChatbotState(message);\r\n};\r\nhandleDinner = () => {\r\n  const message = this.createChatBotMessage(\r\n    \"Great, choose a category and move on:\",\r\n    {\r\n      widget: \"Dinner\",\r\n    }\r\n  );\r\n\r\n  this.updateChatbotState(message);\r\n};\r\nhandleVegan = () => {\r\n  const message = this.createChatBotMessage(\r\n    \"Great, choose a category and move on:\",\r\n    {\r\n      widget: \"Vegan\",\r\n    }\r\n  );\r\n\r\n  this.updateChatbotState(message);\r\n};\r\nhandleHealthy = () => {\r\n  const message = this.createChatBotMessage(\r\n    \"Great, choose a category and move on:\",\r\n    {\r\n      widget: \"Healthy\",\r\n    }\r\n  );\r\n\r\n  this.updateChatbotState(message);\r\n};\r\nhandleQuickEasy = () => {\r\n  const message = this.createChatBotMessage(\r\n    \"Great, choose a category and move on:\",\r\n    {\r\n      widget: \"Quick & Easy\",\r\n    }\r\n  );\r\n\r\n  this.updateChatbotState(message);\r\n};\r\nhandleDesserts = () => {\r\n  const funnymessage = this.createChatBotMessage(\r\n    \"Hmm, hocolate lifts the mood, but don\\'t abuse\"\r\n  )\r\n  const message = this.createChatBotMessage(\r\n    \"Great, choose a category and move on:\",\r\n    {\r\n      widget: \"Desserts\",\r\n    }\r\n  );\r\n  setTimeout (()=>{this.updateChatbotState(message)},3000);\r\n  this.updateChatbotState(funnymessage);\r\n};\r\n\r\n\r\nupdateChatbotState(message) {\r\n\r\n// NOTE: This function is set in the constructor, and is passed in      \r\n// from the top level Chatbot component. The setState function here     \r\n// actually manipulates the top level state of the Chatbot, so it's     \r\n// important that we make sure that we preserve the previous state. \r\n this.setState(prevState => ({\r\n    ...prevState, messages: [...prevState.messages, message]\r\n  }))\r\n}\r\n}\r\n\r\nexport default ActionProvider\r\n\r\n\r\n\r\n","\r\n\r\nexport const greet = [\r\n    \"hello\",\r\n    \"helo\",\r\n    \"hi\",\r\n    \"hi!\",\r\n    \"helloo\",\r\n   ]\r\nexport const quickEasy = [\r\n    \"quik\",\r\n    \"quick\",\r\n    \"easy\",\r\n    \"esy\",\r\n    \"quikly\",\r\n   ]\r\nexport const breakFast = [\r\n    \"breack\",\r\n    \"break\",\r\n    \"breac\",\r\n    \"breakfast\",\r\n    \"branch\",\r\n    \"branh\",\r\n    \"breackfast and branch\",\r\n    \"breakfast and branch\",\r\n   ]\r\nexport const dinner = [\r\n    \"dinner\",\r\n    \"diner\",\r\n    \"dinne\",\r\n    \"dnner\",\r\n   ]\r\n\r\nexport const vegan = [\r\n    \"vegan\",\r\n    \"vegetarian\",\r\n    \"vega\",\r\n   ]\r\n\r\nexport const healthy = [\r\n    \"healthy\",\r\n    \"health\",\r\n    \"healty\",\r\n    \"healhy\",\r\n    \"healy\",\r\n    \"heal\",\r\n   ]\r\nexport const desserts = [\r\n    \"desserts\",\r\n    \"desert\",\r\n    \"dessert\",\r\n    \"cake\",\r\n    \"cookies\",\r\n    \"cookie\",\r\n    \"chocolate\",\r\n   ]\r\n\r\n","import {quickEasy, greet, breakFast, dinner, vegan, healthy, desserts} from './../components/options/MessageParserOptions'\r\n\r\nclass MessageParser {\r\n  constructor(actionProvider, state) {\r\n    this.actionProvider = actionProvider;\r\n    this.state = state;\r\n  }\r\n\r\n parse(message) {\r\n  \r\n   let lowerCaseMessage = message.toLowerCase()\r\n    \r\n    if (greet.includes(lowerCaseMessage)) {\r\n      this.actionProvider.greet()\r\n    }\r\n    if (breakFast.includes(lowerCaseMessage)){\r\n        this.actionProvider.handleBreakfast()\r\n    }\r\n    if (dinner.includes(lowerCaseMessage)){\r\n        this.actionProvider.handleDinner()\r\n    }\r\n    if(quickEasy.includes(lowerCaseMessage)){\r\n      this.actionProvider.handleQuickEasy()\r\n    }\r\n    if(vegan.includes(lowerCaseMessage)){\r\n      this.actionProvider.handleVegan()\r\n    }\r\n    if(healthy.includes(lowerCaseMessage)){\r\n      this.actionProvider.handleHealthy()\r\n    }\r\n    if(desserts.includes(lowerCaseMessage)){\r\n      this.actionProvider.handleDesserts()\r\n    }\r\n\r\n    }\r\n  }\r\n\r\n\r\nexport default MessageParser","import React from 'react';\nimport './App.css';\nimport {Chatbot} from 'react-chatbot-kit'\nimport config from './mainComponents/config'\nimport ActionProvider from './mainComponents/ActionProvider'\nimport MessageParser from './mainComponents/MessageParser';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n          <Chatbot config={config}\n                   actionProvider={ActionProvider}\n                   messageParser={MessageParser}\n          />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}